@model IEnumerable<DSTrucking.Models.JobApplicationViewModel>
@using GridMvc.Html

@{
    if (User.IsInRole("Admin"))
    {
        Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
    }

}

    <div class="container job-application-wrapper-table margin-bottom-40">
       
        <div class="row margin-top-160">
            <div class="col-xs-12">
                @Html.Grid(Model).Columns(columns =>
           {

           columns.Add(c => c.JobPossition).Titled("Position").Filterable(true);
           columns.Add(c => c.User.FullName).Titled("Name").Filterable(true);
           columns.Add(c => c.User.Email).Titled("Email");
           columns.Add(c => c.User.Telephone).Titled("Telephone");
           columns.Add(c => c.AmountOfOTRExperience.TimePeriod).Titled("Amount of experience").Filterable(true);
           columns.Add(c => c.File).Titled("CV").Encoded(false).Sanitized(false);
           columns.Add()
                   .Encoded(false)
                   .Sanitized(false)
                   .RenderValueAs(o => Html.ActionLink("Details", "Details", new { id = o.Id }));
           columns.Add()
                    .RenderValueAs(o => Html.Raw($"<a href='#' type='button' id='deleteItem' class='deleteItem' data-toggle='modal' data-target='#confirm-delete' data-id='{o.Id}'>Delete</a>"))
//<div class='modal fade' id='confirm-delete' tabindex='-1' role='dialog'>" +
                        //"<div class='modal-dialog'>" +
                        //    "<div class='modal-content'>" +
                        //        "<div class='modal-header'>" +
                        //            "<button type = 'button' class='close' data-dismiss='modal' aria-hidden='true'></button>"+
                        //            "<h4 class='modal-title'>Delete Confirmation</h4></div><div class='modal-body'>Are you sure you want to delete this item?</div>"+
                        //        "<div class='modal-footer'>" +
                        //            "<button data-dismiss='modal' type='button' class='btn btn-default'>Cancel</button>" +
                        //            "<button id = 'btnContinueDelete' type='button' class='btn btn-primary'>Delete</button></div></div></div></div>"))
                         .Encoded(false)
                       .Sanitized(false);

                }).WithPaging(10).Sortable(true)


                    @*<div class="row row-reset row-eq-height">
                <div class="col-xs-2 col-reset border-left border-top">
                    <div class="padding-all-13 break-word">
                        @Html.DisplayNameFor(model => model.JobPossition)
                    </div>
                </div>
                <div class="col-xs-2 col-reset border-left border-top">
                    <div class="padding-all-13 break-word">
                        @Html.DisplayNameFor(model => model.User.FirstName)
                    </div>
                </div>

                <div class="col-xs-2 col-reset border-left border-top">
                    <div class="padding-all-13 break-word">
                        @Html.DisplayNameFor(model => model.User.LastName)
                    </div>
                </div>
                <div class="col-xs-2 col-reset border-left border-top">
                    <div class="padding-all-13 break-word">
                        @Html.DisplayNameFor(model => model.User.Telephone)
                    </div>
                </div>
                <div class="col-xs-2 col-reset border-left border-top">
                    <div class="padding-all-13 break-word">
                        @Html.DisplayNameFor(model => model.AmountOfOTRExperienceId)
                    </div>
                </div>
                <div class="col-xs-1 col-reset border-left border-top">
                    <div class="padding-all-13 break-word">
                        @Html.DisplayNameFor(model => model.File)
                    </div>
                </div>
                <div class="col-xs-2 col-reset border-left border-right border-top">
                    <div class="padding-all-13 break-word">
                        <span class="padding-all-1"></span>
                    </div>
                </div>
            </div>*@
                    @*@{
                var number = 0;
                var count = Model.Count();
                var borderBorderBottomClass = " ";
            }
            @foreach (var item in Model)
            {
                number++;
                if(number==count) {
                     borderBorderBottomClass = "border-bottom margin-bottom-20";
                }*@
                    @*<div class="row row-reset row-eq-height">
                <div class="col-xs-2 col-reset border-left border-top @borderBorderBottomClass">
                    <div class="padding-all-13">
                        @Html.DisplayFor(modelItem => item.JobPossition.Name)
                    </div>
                </div>
                <div class="col-xs-2 col-reset border-left border-top @borderBorderBottomClass">
                    <div class="padding-all-13">
                        @Html.DisplayFor(modelItem => item.User.FirstName)
                    </div>
                </div>
                <div class="col-xs-2 col-reset border-left border-top @borderBorderBottomClass">
                    <div class="padding-all-13">
                        @Html.DisplayFor(modelItem => item.User.LastName)
                    </div>
                </div>
                <div class="col-xs-2 col-reset border-left border-top @borderBorderBottomClass">
                    <div class="padding-all-13">
                        @Html.DisplayFor(modelItem => item.User.Telephone)
                    </div>
                </div>
                <div class="col-xs-2 col-reset border-left border-top @borderBorderBottomClass">
                    <div class="padding-all-13">
                        @if (item.AmountOfOTRExperience != null)
                        {

                        @Html.DisplayFor(modelItem => item.AmountOfOTRExperience.TimePeriod)
                        }
                    </div>
                </div>
                <div class="col-xs-1 col-reset border-left border-top @borderBorderBottomClass">
                    <div class="padding-all-13 f-center">
                        @if (item.File != null)
                        {
                            @Html.Raw($"<a href ='/file/download/{item.File}' target='_self'><i class='fa fa-download'></i></a>")
                        }
                    </div>
                </div>
                <div class="col-xs-2 col-reset border-left border-right border-top @borderBorderBottomClass">
                    <div class="padding-all-13">
                        @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                    </div>
                </div>
            </div>}*@

                </div>
        </div>
    </div>

    <script>
        debugger;
       
        function confirm(heading, question, cancelButtonTxt, okButtonTxt, id) {
            debugger;
            var confirmModal =
              $('<div id="myModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel">' +
                '<div class="modal-dialog"  role="document"><div class="modal-content">' +
                  '<div class="modal-header">' +
                    '<a class="close" data-dismiss="modal" >&times;</a>' +
                    '<h3>' + heading + '</h3>' +
                  '</div>' +

                  '<div class="modal-body">' +
                    '<p>' + question + '</p>' +
                  '</div>' +

                  '<div class="modal-footer">' +
                    '<a href="#" class="wpcf7-submit" data-dismiss="modal">' +
                      cancelButtonTxt +
                    '</a>' +
                    '<a href="javascript:void(0)" id="okButton" class="wpcf7-submit">' +
                      okButtonTxt +
                    '</a>' +
                  '</div>' +
                   '</div>' +
                    '</div>' +
                '</div>');

            confirmModal.find('#okButton').click(function (event) {
                debugger;
             
                $.ajax({
                    type: "POST",
                    url: "/JobApplications/DeleteConfirmed",
                    data: {
                        id: id
                    },
                    success: function (result) {
                        debugger;
                        if (result == "OK") {
                            confirmModal.modal('hide');
                            window.location.href = "/jobapplications"
                        }

                    }
                });
             
               
            });

            confirmModal.modal('show');
            confirmModal.children().first().css('z-index', '0');
        };

        // ---------------------------------------------------------- Confirm Put To Use

        $(".deleteItem").on("click", function (event) {
            // get txn id from current table row
            var id = $(this).data('id');

            var heading = 'Confirm Delete';
            var question = 'Please confirm that you wish to delete record ' + id + '.';
            var cancelButtonTxt = 'Cancel';
            var okButtonTxt = 'Confirm';

         

            confirm(heading, question, cancelButtonTxt, okButtonTxt, id);

        });
    </script>
<style>
    .wpcf7-submit{
      padding: 8px 20px;
    font-size: 13px;
    font-weight: 700;
    text-transform: uppercase;
    border: none;
    border-radius: 25px;
    -webkit-border-radius: 5px;
    -moz-border-radius: 25px;
    color: #fff;
    background-color: #006db7;
    margin-right: 5px;
    -webkit-transition: all 0.2s ease 0s;
    -moz-transition: all 0.2s ease 0s;
    -o-transition: all 0.2s ease 0s;
    -ms-transition: all 0.2s ease 0s;
    transition: all 0.2s ease 0s;
}

</style>
